name: Deploy Project

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.16.0]  # Explicitly set Node.js version to 16

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.4'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -O ngrok.zip
        unzip ngrok.zip
        sudo mv ngrok /usr/local/bin

    - name: Start Flask app and ngrok
      env:
        DLAI_TOGETHER_API_BASE: ${{ secrets.DLAI_TOGETHER_API_BASE }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        # Start your Flask app in the background
        python app.py &

        # Wait for Flask to start
        sleep 5

        # Authenticate ngrok
        ngrok authtoken $NGROK_AUTH_TOKEN

        # Expose your Flask app to the public and capture the output
        ngrok http 5000 > ngrok.log &
        
        # Wait for ngrok to start and capture the public URL
        sleep 5
        cat ngrok.log | grep -o 'https://[0-9a-z]*\.ngrok\.io' > ngrok_url.txt
        
        # Print the ngrok public URL
        echo "ngrok public URL: $(cat ngrok_url.txt)"

    - name: Keep the job running
      run: tail -f /dev/null
